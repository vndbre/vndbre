{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "plugins": [
    "jsdoc",
    "@typescript-eslint"
  ],
  "extends": [
    "airbnb",
    "airbnb-typescript",
    "airbnb/hooks",
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended"
  ],
  "rules": {
    "no-duplicate-imports": "off",
    "import/no-duplicates": ["error", {"considerQueryString": true}],
    "@typescript-eslint/consistent-type-imports": "warn",
    "react/jsx-filename-extension": [
      "error",
      {
        "extensions": [
          ".ts",
          ".tsx"
        ]
      }
    ],
    "react/jsx-props-no-spreading": "off",
    "react/jsx-no-useless-fragment": [
      "error",
      {
        "allowExpressions": true
      }
    ],
    "react/jsx-key": "error",
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function"
      }
    ],
    "react/prop-types": "off",
    "react-hooks/exhaustive-deps": "off",
    "@typescript-eslint/space-before-function-paren": [
      "error",
      "never"
    ],
    "@typescript-eslint/consistent-type-definitions": "error",
    "@typescript-eslint/no-namespace": "off",
    "@typescript-eslint/no-parameter-properties": [
      "error",
      {
        "allows": [
          "private",
          "private readonly",
          "protected readonly",
          "public readonly"
        ]
      }
    ],
    "@typescript-eslint/comma-spacing": "error",
    "@typescript-eslint/default-param-last": "error",
    "@typescript-eslint/dot-notation": "error",
    "@typescript-eslint/keyword-spacing": "error",
    "@typescript-eslint/no-throw-literal": "error",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/quotes": [
      "error",
      "single"
    ],
    "@typescript-eslint/return-await": "error",
    "@typescript-eslint/no-empty-function": "warn",
    "@typescript-eslint/no-shadow": [
      "error"
    ],
    "@typescript-eslint/brace-style": [
      "error",
      "1tbs"
    ],
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/explicit-member-accessibility": "error",
    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": "default",
        "format": [
          "camelCase",
          "PascalCase"
        ],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },
      {
        "selector": "variable",
        "format": [
          "camelCase",
          "UPPER_CASE",
          "PascalCase"
        ],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },
      {
        "selector": "typeLike",
        "format": [
          "PascalCase"
        ]
      },
      {
        "selector": "enumMember",
        "format": [
          "PascalCase"
        ]
      }
    ],
    "@typescript-eslint/no-confusing-non-null-assertion": "error",
    "@typescript-eslint/no-implicit-any-catch": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/require-array-sort-compare": "error",
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": false
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "args": "after-used",
        "ignoreRestSiblings": false,
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/type-annotation-spacing": "error",
    "@typescript-eslint/unified-signatures": "error",
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": true
      }
    ],
    "@typescript-eslint/comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "always-multiline",
        "enums": "always-multiline",
        "generics": "always-multiline",
        "tuples": "always-multiline"
      }
    ],
    "@typescript-eslint/semi": [
      "error",
      "always"
    ],
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "semi",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "semi",
          "requireLast": true
        }
      }
    ],
    "@typescript-eslint/indent": [
      "error",
      2,
      {
        "SwitchCase": 1,
        "ignoredNodes": [
          "TSTypeAliasDeclaration *",
          "TSTypeParameterInstantiation > *",
          "TSTypeAnnotation"
        ]
      }
    ],
    "jsdoc/require-example": "off",
    "jsdoc/require-file-overview": "off",
    "jsdoc/require-hyphen-before-param-description": "off",
    "jsdoc/require-param-type": "off",
    "jsdoc/require-returns": "off",
    "jsdoc/require-property": "error",
    "jsdoc/require-property-description": "error",
    "jsdoc/require-returns-check": "off",
    "jsdoc/require-returns-type": "off",
    "jsdoc/check-access": "off",
    "jsdoc/empty-tags": "off",
    "jsdoc/check-tag-names": "off",
    "jsdoc/check-alignment": "error",
    "jsdoc/newline-after-description": [
      "error",
      "never"
    ],
    "jsdoc/no-bad-blocks": "error",
    "jsdoc/require-jsdoc": [
      "error",
      {
        "contexts": [
          "MethodDefinition:not([accessibility='private'])",
          "ClassDeclaration",
          "ClassProperty:not([accessibility='private'])",
          "TSEnumDeclaration",
          "ExportNamedDeclaration[declaration.type=\"TSInterfaceDeclaration\"]",
          "TSInterfaceDeclaration :matches(TSCallSignatureDeclaration, TSMethodSignature, TSPropertySignature)"
        ],
        "checkConstructors": false,
        "checkGetters": true,
        "checkSetters": true,
        "enableFixer": false,
        "require": {
          "ArrowFunctionExpression": true
        }
      }
    ],
    "jsdoc/require-description-complete-sentence": [
      "error",
      {
        "tags": [
          "see",
          "copyright"
        ]
      }
    ],
    "jsdoc/require-param": [
      "error",
      {
        "checkDestructuredRoots": false
      }
    ],
    "jsdoc/require-param-name": "error",
    "jsdoc/require-param-description": "error",
    "jsdoc/no-types": "error",
    "import/no-unresolved": "off",
    "import/extensions": "off",
    "import/prefer-default-export": "off",
    "import/no-deprecated": "error",
    "getter-return": "error",
    "no-async-promise-executor": "error",
    "no-await-in-loop": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-console": "warn",
    "no-constant-condition": "error",
    "no-control-regex": "error",
    "no-dupe-args": "error",
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-empty": "error",
    "no-empty-character-class": "error",
    "no-ex-assign": "error",
    "no-extra-boolean-cast": "error",
    "no-func-assign": "error",
    "no-import-assign": "error",
    "no-invalid-regexp": "error",
    "no-irregular-whitespace": "error",
    "no-misleading-character-class": "error",
    "no-obj-calls": "error",
    "no-promise-executor-return": "error",
    "no-prototype-builtins": "error",
    "no-regex-spaces": "error",
    "no-setter-return": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "error",
    "no-unexpected-multiline": "error",
    "no-unreachable": "error",
    "no-unreachable-loop": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": "error",
    "no-unsafe-optional-chaining": "error",
    "require-atomic-updates": "error",
    "use-isnan": "error",
    "curly": [
      "error",
      "all"
    ],
    "default-case": "error",
    "default-case-last": "error",
    "dot-location": [
      "error",
      "property"
    ],
    "dot-notation": "error",
    "eqeqeq": [
      "error",
      "smart"
    ],
    "no-alert": "error",
    "no-caller": "error",
    "no-case-declarations": "error",
    "no-constructor-return": "error",
    "no-else-return": "error",
    "no-empty-function": [
      "warn",
      {
        "allow": [
          "constructors"
        ]
      }
    ],
    "no-empty-pattern": "error",
    "no-eval": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-fallthrough": "error",
    "no-floating-decimal": "error",
    "no-global-assign": "error",
    "no-implied-eval": "error",
    "no-iterator": "error",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-loop-func": "error",
    "no-magic-numbers": "off",
    "no-multi-spaces": "error",
    "no-multi-str": "off",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-wrappers": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-param-reassign": "off",
    "no-proto": "error",
    "no-return-assign": "error",
    "no-return-await": "error",
    "no-script-url": "error",
    "no-self-assign": "error",
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-throw-literal": "error",
    "no-unused-expressions": "error",
    "no-useless-call": "error",
    "no-useless-catch": "error",
    "no-useless-concat": "error",
    "no-useless-escape": "error",
    "no-useless-return": "error",
    "no-with": "error",
    "prefer-named-capture-group": "off",
    "prefer-promise-reject-errors": "error",
    "radix": "error",
    "require-await": "error",
    "require-unicode-regexp": "off",
    "no-delete-var": "error",
    "no-shadow-restricted-names": "error",
    "no-shadow": "off",
    "array-bracket-newline": [
      "error",
      {
        "multiline": true
      }
    ],
    "array-element-newline": [
      "error",
      "consistent"
    ],
    "comma-style": "error",
    "computed-property-spacing": [
      "error",
      "never"
    ],
    "eol-last": "error",
    "func-call-spacing": [
      "error",
      "never"
    ],
    "func-name-matching": "error",
    "function-call-argument-newline": [
      "error",
      "consistent"
    ],
    "function-paren-newline": [
      "error",
      "consistent"
    ],
    "key-spacing": [
      "error",
      {
        "mode": "strict"
      }
    ],
    "keyword-spacing": [
      "error",
      {
        "after": true,
        "before": true
      }
    ],
    "line-comment-position": [
      "error",
      {
        "position": "above"
      }
    ],
    "linebreak-style": "off",
    "lines-around-comment": [
      "error",
      {
        "beforeLineComment": true,
        "allowBlockStart": true,
        "allowBlockEnd": true,
        "allowObjectStart": true,
        "allowObjectEnd": true,
        "allowArrayStart": true,
        "allowArrayEnd": true,
        "allowClassStart": true,
        "allowClassEnd": true
      }
    ],
    "lines-between-class-members": [
      "error",
      "always"
    ],
    "max-depth": [
      "error",
      3
    ],
    "max-len": [
      "error",
      {
        "code": 140
      }
    ],
    "max-lines": "off",
    "max-lines-per-function": "off",
    "max-params": "off",
    "max-statements-per-line": [
      "error",
      {
        "max": 1
      }
    ],
    "no-multiple-empty-lines": "error",
    "no-nested-ternary": "error",
    "no-new-object": "error",
    "no-trailing-spaces": "error",
    "no-underscore-dangle": "off",
    "no-unneeded-ternary": "error",
    "no-whitespace-before-property": "error",
    "object-curly-newline": [
      "error",
      {
        "multiline": true,
        "consistent": true
      }
    ],
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "object-property-newline": [
      "error",
      {
        "allowAllPropertiesOnSameLine": true
      }
    ],
    "one-var": [
      "error",
      "never"
    ],
    "operator-assignment": "error",
    "operator-linebreak": [
      "error",
      "after"
    ],
    "prefer-exponentiation-operator": "error",
    "prefer-object-spread": "error",
    "quote-props": [
      "error",
      "consistent-as-needed"
    ],
    "quotes": [
      "error",
      "single",
      {
        "allowTemplateLiterals": true
      }
    ],
    "space-unary-ops": "error",
    "spaced-comment": [
      "error",
      "always"
    ],
    "switch-colon-spacing": "error",
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "arrow-parens": [
      "error",
      "as-needed"
    ],
    "arrow-spacing": "error",
    "object-shorthand": [
      "error",
      "always",
      {
        "avoidExplicitReturnArrows": true
      }
    ],
    "no-undef-init": "error",
    "no-debugger": "off",
    "newline-per-chained-call": [
      "error",
      {
        "ignoreChainWithDepth": 2
      }
    ],
    "no-class-assign": "error",
    "no-this-before-super": "error",
    "no-use-before-define": "off",
    "no-useless-computed-key": "error",
    "no-useless-rename": "error",
    "prefer-arrow-callback": "error",
    "prefer-arrow/prefer-arrow-functions": "off",
    "prefer-destructuring": [
      "error",
      {
        "object": true,
        "array": false
      }
    ],
    "prefer-template": "error",
    "require-yield": "error",
    "rest-spread-spacing": [
      "error",
      "never"
    ],
    "template-curly-spacing": [
      "error",
      "never"
    ],
    "symbol-description": "error",
    "func-style": [
      "error",
      "declaration",
      {
        "allowArrowFunctions": true
      }
    ],
    "implicit-arrow-linebreak": "off"
  },
  "overrides": [
    {
      "files": [
        "*Dto.ts"
      ],
      "rules": {
        "@typescript-eslint/naming-convention": "off",
        "jsdoc/require-jsdoc": "off"
      }
    },
    {
      "files": [
        "*Mapper.ts"
      ],
      "rules": {
        "@typescript-eslint/naming-convention": [
          "off",
          {
            "selector": "property"
          }
        ]
      }
    },
    {
      "files": [
        "**/models/**/*.ts"
      ],
      "rules": {
        "import/export": "off"
      }
    },
    {
      "files": [
        "**/dtos/**/*.ts"
      ],
      "rules": {
        "no-restricted-syntax": [
          "error",
          {
            "selector": "TSPropertySignature[readonly=undefined]",
            "message": "Missing 'readonly' modifier for the DTO property."
          },
          {
            "selector": "TSPropertySignature TSTypeAnnotation[typeAnnotation.type='TSArrayType']",
            "message": "Missing 'readonly' type modifier for array."
          }
        ]
      }
    }
  ]
}